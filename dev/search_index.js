var documenterSearchIndex = {"docs":
[{"location":"tests/#Tests","page":"Tests","title":"Tests","text":"","category":"section"},{"location":"tests/#Unpacking-with-@","page":"Tests","title":"Unpacking with @↓","text":"","category":"section"},{"location":"tests/","page":"Tests","title":"Tests","text":"using UnPack, ExtractMacro\nusing BenchmarkTools\ns = A(1, [2, 3], B(4, [5, 6]))\nv = [s]","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Unpacking a field from a struct:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @extract s : a\n29.122 ns (0 allocations: 0 bytes)\n\njulia> @btime @unpack a = s\n18.967 ns (0 allocations: 0 bytes)\n\njulia> @btime @↓ a = s\n19.619 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Unpacking a field from a vector of structs:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @extract v[1] : a\n45.981 ns (0 allocations: 0 bytes)\n\njulia> @btime @unpack a = v[1]\n36.982 ns (0 allocations: 0 bytes)\n\njulia> @btime @↓ a = v[1]\n35.256 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Unpacking more than one fields from a struct:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @extract s : a b\n57.859 ns (0 allocations: 0 bytes)\n\njulia> @btime @unpack a, b = s\n37.299 ns (0 allocations: 0 bytes)\n\njulia> @btime @↓ a, b = s\n37.149 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Unpacking whilst doing some basic maths:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @extract s : a = 2a\n47.218 ns (0 allocations: 0 bytes)\n\njulia> @btime @↓ a ← 2a = s\n59.135 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Unpacking into differently named variables:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @extract s : a = b .+ 1 b\n552.968 ns (3 allocations: 160 bytes)\n\njulia> foo() = @↓ a ← b .+ 1, b = s\njulia> @btime foo()\n569.386 ns (3 allocations: 160 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Unpacking from nested structs:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @extract s.c : d e\n115.139 ns (0 allocations: 0 bytes)\n\njulia> @btime @unpack d, e = s.c\n71.929 ns (0 allocations: 0 bytes)\n\njulia> @btime @↓ d, e = s.c\n67.673 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/#Packing-with-@","page":"Tests","title":"Packing with @↑","text":"","category":"section"},{"location":"tests/","page":"Tests","title":"Tests","text":"Packing a variable into a struct:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @pack! s = a\n62.497 ns (1 allocation: 16 bytes)\n\njulia> @btime @↑ s = a\n21.954 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Packing a variable into a vector of structs:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @pack! v[1] = a\n80.517 ns (1 allocation: 16 bytes)\n\njulia> @btime @↑ v[1] = a\n39.042 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Packing more than one variables into a struct:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @pack! s = a, b\n93.617 ns (1 allocation: 32 bytes)\n\njulia> @btime @↑ s = a, b\n38.943 ns (0 allocations: 0 bytes)","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"Packing into nested structs:","category":"page"},{"location":"tests/","page":"Tests","title":"Tests","text":"julia> @btime @pack! s.c = d, e\n135.453 ns (1 allocation: 32 bytes)\n\njulia> @btime @↑ s.c = d, e\n70.029 ns (0 allocations: 0 bytes)","category":"page"},{"location":"#NSDEBase.jl","page":"Home","title":"NSDEBase.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the documentation of NSDEBase.jl, a Julia package providing the macros @↓, @↑, @⤓, @⤒, and @←.","category":"page"},{"location":"#Manual","page":"Home","title":"Manual","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Depth = 3","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"All exported types and functions are considered part of the public API and thus documented in this manual.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
